# This is a basic workflow to help you get started with Actions

name: lang_500

# Controls when the action will run. 
on:
  issues:
    types: [opened]
  # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    # continue-on-error: true
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        bug_ind: [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          sudo apt update
          sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat maven

      - uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: '5.34'

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install junitparser
          pip install networkx

      - name: Checkout d4j
        uses: actions/checkout@v2
        with:
          repository: amir9979/defects4j
          path: .
          fetch-depth: 0
      
      - run: cpanm --installdeps .
      - run: ./init.sh

      - name: initialize-project-and-collect-issues
        run: ./initialize-project-and-collect-issues.pl -p Lang -n commons-lang -w bug-mining_${{ matrix.bug_ind }} -r https://github.com/apache/commons-lang.git -g jira -t LANG -e "/(LANG-\d+)/mi"
        working-directory: ./framework/bug-mining
      
      - name: initialize-revisions
        run: ./initialize-revisions.pl -p Lang -w bug-mining_${{ matrix.bug_ind }}  -i ${{ matrix.bug_ind }} 
        working-directory: ./framework/bug-mining

      - name: analyze-project
        run: ./analyze-project.pl -p Lang -w bug-mining_${{ matrix.bug_ind }}  -g jira -t LANG -i ${{ matrix.bug_ind }} 
        working-directory: ./framework/bug-mining

      - name: get-trigger
        run: ./get-trigger.pl -p Lang -w bug-mining_${{ matrix.bug_ind }}
        working-directory: ./framework/bug-mining

      - name: get-metadata
        run: ./get-metadata.pl -p Lang -w bug-mining_${{ matrix.bug_ind }}
        working-directory: ./framework/bug-mining

#       - name: chmod
#         run: chmod 777 ./tracer.pl
#         working-directory: ./framework/bug-mining

#       - name: trace
#         run: ./tracer.pl -p Lang -w bug-mining_${{ matrix.bug_ind }}
#         working-directory: ./framework/bug-mining

      - name: delete repo
        if: ${{always()}}
        run: |
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/project_repos
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/issues
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/framework/core
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/gitlog
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/issues.txt
            rm -rf ./framework/bug-mining/bug-mining_${{ matrix.bug_ind}}/framework/projects/Lang/lib
      
      - name: Upload bug-mining
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          # Artifact name
          name: bug-mining
          # A file, directory or wildcard pattern that describes what to upload
          path: ./framework/bug-mining

#       - name: check temp vers
#         run: ls -R /tmp/versions
      
#       - name: Upload version
#         if: ${{ always() }}
#         uses: actions/upload-artifact@v2
#         with:
#           # Artifact name
#           name: version
#           # A file, directory or wildcard pattern that describes what to upload
#           path: /tmp/versions


{"mode":"full","isActive":false}
